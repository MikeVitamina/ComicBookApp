{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\ComicBookApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [comics, setComics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchComicVinesHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://cors-anywhere.herokuapp.com/https://comicvine.gamespot.com/api/issues/?api_key=82c0a7bade3e1084572773a68abe4ba7e4d21a76&limit=10');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedComics = data.results.map(comicData => {\n        return {\n          id: comicData.id,\n          image: comicData.image.original_url,\n          dateAdded: comicData.date_added,\n          name: comicData.name,\n          issueNumber: comicData.issue_number\n        };\n      });\n      setComics(transformedComics);\n      console.log(comics);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchComicVinesHandler();\n  }, [fetchComicVinesHandler]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comic Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3RN9+PfhBH1IBo7DDFzTowlD53s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React/ComicBookApp/src/App.js"],"names":["React","useState","useCallback","useEffect","App","comics","setComics","isLoading","setIsLoading","error","setError","fetchComicVinesHandler","response","fetch","ok","Error","data","json","transformedComics","results","map","comicData","id","image","original_url","dateAdded","date_added","name","issueNumber","issue_number","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAqCC,SAArC,QAAqD,OAArD;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,sBAAsB,GAAG,YAAY;AAEzCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,0IAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAGA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACC,EADT;AAELC,UAAAA,KAAK,EAAEF,SAAS,CAACE,KAAV,CAAgBC,YAFlB;AAGLC,UAAAA,SAAS,EAAEJ,SAAS,CAACK,UAHhB;AAILC,UAAAA,IAAI,EAAEN,SAAS,CAACM,IAJX;AAKLC,UAAAA,WAAW,EAAEP,SAAS,CAACQ;AALlB,SAAP;AAOD,OARyB,CAA1B;AASAvB,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY1B,MAAZ;AACD,KAnBD,CAmBE,OAAOI,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACuB,OAAP,CAAR;AACD;;AACDxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA3BD;;AA6BAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,CAACA,sBAAD,CAFM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7CQP,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useCallback,useEffect} from 'react';\n\n\nfunction App() {\n  const [comics, setComics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchComicVinesHandler = async () => {\n    \n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://cors-anywhere.herokuapp.com/https://comicvine.gamespot.com/api/issues/?api_key=82c0a7bade3e1084572773a68abe4ba7e4d21a76&limit=10');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      \n      \n      const transformedComics = data.results.map((comicData) => {\n        return {\n          id: comicData.id,\n          image: comicData.image.original_url,\n          dateAdded: comicData.date_added,\n          name: comicData.name,\n          issueNumber: comicData.issue_number\n        };\n      });\n      setComics(transformedComics);\n      console.log(comics);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchComicVinesHandler();\n  }, [fetchComicVinesHandler]);\n\n\n\n  return (\n    <div>\n      <h1>Comic Book</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}